{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/components/Market.js\";\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Item from './Item';\nlet Market = (_dec = inject(\"inventory\"), _dec(_class = observer(_class = (_temp = class Market extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        itemName: e.target.value\n      });\n    };\n\n    this.keyPress = e => {\n      if (e.keyCode == 13) {\n        //enter\n        console.log('item: ', e.target.value);\n        this.props.inventory.addItem(e.target.value);\n        this.setState({\n          itemName: ''\n        });\n      }\n    };\n\n    this.state = {\n      itemName: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.itemName,\n      onChange: this.handleChange,\n      onKeyDown: this.keyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), this.props.inventory.items.map(i => React.createElement(Item, {\n      item: i,\n      buyItem: this.props.inventory.buyItem,\n      editItem: this.props.inventory.editItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}, _temp)) || _class) || _class);\nexport default Market; // Your Market component should have an input to enter a new Item\n// On enter it should run a function which calls the store's addItem action\n// It should then reset the input to be empty\n// It should map the items array from your store, to Item components and pass the relevant data as props","map":{"version":3,"sources":["/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/components/Market.js"],"names":["React","Component","observer","inject","Item","Market","constructor","handleChange","e","setState","itemName","target","value","keyPress","keyCode","console","log","props","inventory","addItem","state","render","items","map","i","buyItem","editItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,YAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;IAIMC,M,WAFLF,MAAM,CAAC,WAAD,C,gBACND,Q,mBADD,MAEMG,MAFN,SAEqBJ,SAFrB,CAE+B;AAC3BK,EAAAA,WAAW,GAAG;AACV;;AADU,SAMdC,YANc,GAMEC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACH,KARa;;AAAA,SAUdC,QAVc,GAUFL,CAAD,IAAO;AACd,UAAIA,CAAC,CAACM,OAAF,IAAa,EAAjB,EAAqB;AAAC;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,CAAC,CAACG,MAAF,CAASC,KAA/B;AACA,aAAKK,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6BX,CAAC,CAACG,MAAF,CAASC,KAAtC;AACA,aAAKH,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AAEH;AACJ,KAjBa;;AAEV,SAAKU,KAAL,GAAa;AACTV,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAcDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWV,QAAzB;AAAmC,MAAA,QAAQ,EAAE,KAAKH,YAAlD;AAAgE,MAAA,SAAS,EAAE,KAAKM,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKI,KAAL,CAAWC,SAAX,CAAqBI,KAArB,CAA2BC,GAA3B,CAA+BC,CAAC,IAC7B,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,CAAZ;AACI,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,SAAX,CAAqBO,OADlC;AAEI,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,QAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFL,CADJ;AAUH;;AA/B0B,C;AAkC/B,eAAerB,MAAf,C,CACA;AACA;AACA;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport { observer ,inject} from 'mobx-react'\nimport Item from './Item'\n\n@inject(\"inventory\")\n@observer\nclass Market extends Component {\n    constructor() {\n        super()\n        this.state = {\n            itemName: ''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({ itemName: e.target.value });\n    }\n\n    keyPress = (e) => {\n        if (e.keyCode == 13) {//enter\n            console.log('item: ', e.target.value);\n            this.props.inventory.addItem(e.target.value)\n            this.setState({ itemName: '' })\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"market\">\n                <input value={this.state.itemName} onChange={this.handleChange} onKeyDown={this.keyPress}></input>\n                {this.props.inventory.items.map(i =>\n                    <Item item={i}\n                        buyItem={this.props.inventory.buyItem}\n                        editItem={this.props.inventory.editItem} \n                        />)}\n            </div>\n        )\n    }\n}\n\nexport default Market\n// Your Market component should have an input to enter a new Item\n// On enter it should run a function which calls the store's addItem action\n// It should then reset the input to be empty\n\n\n// It should map the items array from your store, to Item components and pass the relevant data as props"]},"metadata":{},"sourceType":"module"}