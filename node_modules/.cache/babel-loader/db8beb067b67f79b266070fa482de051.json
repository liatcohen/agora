{"ast":null,"code":"import _initializerDefineProperty from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action, computed } from 'mobx';\nimport { Item } from './Item';\nexport let Inventory = (_class = (_temp = class Inventory {\n  constructor() {\n    _initializerDefineProperty(this, \"items\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"addItem\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"buyItem\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"changePrice\", _descriptor4, this);\n  }\n\n  get numItems() {\n    return this.items.l;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"addItem\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (name, price = 0, quantity = 1) => {\n      let item = this.items.find(i => i.name === name);\n      {\n        item ? item.quantity++ : this.items.push(new Item(name, price, quantity));\n      }\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"buyItem\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return name => {\n      let item = this.items.find(i => i.name === name);\n      {\n        item.quantity > 1 ? item.quantity-- : this.items = this.items.filter(i => i.name !== name);\n      }\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"changePrice\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (name, price) => {\n      this.items.find(i => i.name === name).price = price;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"numItems\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"numItems\"), _class.prototype)), _class); // The value numItems should return the total number of items in the Agora.","map":{"version":3,"sources":["/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/stores/Inventory.js"],"names":["observable","action","computed","Item","Inventory","numItems","items","l","name","price","quantity","item","find","i","push","filter"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA4C,MAA5C;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,WAAaC,SAAb,sBAAO,MAAMA,SAAN,CAAgB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AA4BnB,MAAcC,QAAd,GAAwB;AAC5B,WAAO,KAAKC,KAAL,CAAWC,CAAlB;AACK;;AA9BkB,CAAvB,+EACKP,UADL;AAAA;AAAA;AAAA;AAAA;AAAA,WACwB,EADxB;AAAA;AAAA,2EAMKC,MANL;AAAA;AAAA;AAAA;AAAA;AAAA,WAMsB,CAACO,IAAD,EAAOC,KAAK,GAAG,CAAf,EAAkBC,QAAQ,GAAG,CAA7B,KAAmC;AACjD,UAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWA,IAAhC,CAAX;AACA;AACIG,QAAAA,IAAI,GACAA,IAAI,CAACD,QAAL,EADA,GAEE,KAAKJ,KAAL,CAAWQ,IAAX,CAAgB,IAAIX,IAAJ,CAASK,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,CAAhB,CAFN;AAGH;AACJ,KAbL;AAAA;AAAA,2EAeKT,MAfL;AAAA;AAAA;AAAA;AAAA;AAAA,WAeuBO,IAAD,IAAU;AACxB,UAAIG,IAAI,GAAG,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWA,IAAhC,CAAX;AACA;AACIG,QAAAA,IAAI,CAACD,QAAL,GAAe,CAAf,GACIC,IAAI,CAACD,QAAL,EADJ,GAEM,KAAKJ,KAAL,GAAW,KAAKA,KAAL,CAAWS,MAAX,CAAkBF,CAAC,IAAEA,CAAC,CAACL,IAAF,KAASA,IAA9B,CAFjB;AAGH;AACJ,KAtBL;AAAA;AAAA,+EAwBKP,MAxBL;AAAA;AAAA;AAAA;AAAA;AAAA,WAwByB,CAACO,IAAD,EAAMC,KAAN,KAAc;AAC/B,WAAKH,KAAL,CAAWM,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWA,IAAhC,EAAsCC,KAAtC,GAA4CA,KAA5C;AACH,KA1BL;AAAA;AAAA,6DA4BKP,QA5BL,8F,CAgCA","sourcesContent":["import { observable, action ,computed} from 'mobx'\nimport { Item } from './Item';\n\nexport class Inventory {\n    @observable items = []\n\n    // constructor() {\n\n    // }\n    @action addItem = (name, price = 0, quantity = 1) => {\n        let item = this.items.find(i => i.name === name)\n        {\n            item ?\n                item.quantity++\n                : this.items.push(new Item(name, price, quantity))\n        }\n    }\n\n    @action buyItem = (name) => {\n        let item = this.items.find(i => i.name === name)\n        {\n            item.quantity >1 ?\n                item.quantity--\n                : this.items=this.items.filter(i=>i.name!==name)\n        }\n    }\n\n    @action changePrice =(name,price)=>{\n        this.items.find(i => i.name === name).price=price\n    }\n    \n    @computed get numItems(){\nreturn this.items.l\n    }\n}\n// The value numItems should return the total number of items in the Agora.\n"]},"metadata":{},"sourceType":"module"}