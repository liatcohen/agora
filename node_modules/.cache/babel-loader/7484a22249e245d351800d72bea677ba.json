{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/components/Market.js\";\n\nimport React, { Component } from 'react';\nimport { observer } from 'mobx-react';\n\nlet Market = observer(_class = (_temp = class Market extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        itemName: e.target.value\n      });\n    };\n\n    this.keyPress = e => {\n      if (e.keyCode == 13) {\n        //enter\n        console.log('value', e.target.value); // put the login here\n\n        this.setState({\n          itemName: ''\n        });\n      }\n    };\n\n    this.state = {\n      itemName: ''\n    };\n  }\n\n  // buyItem = () => {\n  //     this.props.inventory.buyItem(this.props.item.name)\n  // }\n  // changePrice = () => {\n  //     let newPrice = prompt(\"Please enter new price\", \"price\");\n  //     console.log(newPrice)\n  //     this.props.inventory.editItem(this.props.item.name, newPrice)\n  //   }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.itemName,\n      onChange: this.handleChange,\n      onKeyDown: this.keyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}, _temp)) || _class;\n\nexport default Market; // Your Market component should have an input to enter a new Item\n// On enter it should run a function which calls the store's addItem action\n// It should then reset the input to be empty\n// It should map the items array from your store, to Item components and pass the relevant data as props","map":{"version":3,"sources":["/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/components/Market.js"],"names":["React","Component","observer","Market","constructor","handleChange","e","setState","itemName","target","value","keyPress","keyCode","console","log","state","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAGMC,M,GADLD,Q,mBAAD,MACMC,MADN,SACqBF,SADrB,CAC+B;AAC3BG,EAAAA,WAAW,GAAE;AACT;;AADS,SAMbC,YANa,GAMCC,CAAD,IAAM;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACF,KARW;;AAAA,SAUZC,QAVY,GAUFL,CAAD,IAAK;AACX,UAAGA,CAAC,CAACM,OAAF,IAAa,EAAhB,EAAmB;AAAC;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,CAAC,CAACG,MAAF,CAASC,KAA9B,EADgB,CAEhB;;AACQ,aAAKH,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAAd;AAEV;AACH,KAjBW;;AAET,SAAKO,KAAL,GAAW;AACPP,MAAAA,QAAQ,EAAC;AADF,KAAX;AAGH;;AAaD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AACL,WACG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWP,QAAzB;AAAmC,MAAA,QAAQ,EAAE,KAAKH,YAAlD;AAAgE,MAAA,SAAS,EAAE,KAAKM,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH;AAKH;;AAnC0B,C;;AAsC/B,eAAeR,MAAf,C,CACA;AACA;AACA;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react'\n\n@observer\nclass Market extends Component {\n    constructor(){\n        super()\n        this.state={\n            itemName:''\n        }\n    }\n    handleChange=(e)=> {\n        this.setState({ itemName: e.target.value });\n     }\n\n     keyPress=(e)=>{\n        if(e.keyCode == 13){//enter\n           console.log('value', e.target.value);\n           // put the login here\n                   this.setState({itemName:''})\n\n        }\n     }\n    // buyItem = () => {\n    //     this.props.inventory.buyItem(this.props.item.name)\n    // }\n\n    // changePrice = () => {\n    //     let newPrice = prompt(\"Please enter new price\", \"price\");\n    //     console.log(newPrice)\n    //     this.props.inventory.editItem(this.props.item.name, newPrice)\n    //   }\n\n    render() {\n        return (\n           <div className=\"market\">\n               <input value={this.state.itemName} onChange={this.handleChange} onKeyDown={this.keyPress}></input>\n           </div>\n        )\n    }\n}\n\nexport default Market\n// Your Market component should have an input to enter a new Item\n// On enter it should run a function which calls the store's addItem action\n// It should then reset the input to be empty\n\n\n// It should map the items array from your store, to Item components and pass the relevant data as props"]},"metadata":{},"sourceType":"module"}