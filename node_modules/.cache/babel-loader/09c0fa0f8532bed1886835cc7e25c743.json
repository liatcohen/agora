{"ast":null,"code":"import _initializerDefineProperty from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/liat/Documents/bootcamp_elevation/my_projects/agora/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable } from 'mobx';\nimport { Item, action } from './Item';\nexport let Inventory = (_class = (_temp = class Inventory {\n  // @observable completed = false\n  // @observable location\n  constructor(item) {\n    _initializerDefineProperty(this, \"items\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"addItem\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"buyItem\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"changePrice\", _descriptor4, this);\n\n    this.name = name;\n    this.location = \"Super Sell\";\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"addItem\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (name, price = 0, quantity = 1) => {\n      let item = this.items.find(i => i.name === name);\n      {\n        item ? item.quantity++ : this.items.push(new Item(name, price, quantity));\n      }\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"buyItem\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return name => {\n      let item = this.items.find(i => i.name === name);\n      {\n        item.quantity > 1 ? item.quantity-- : this.items = this.items.filter(i => i.name != name);\n      }\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"changePrice\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (name, price) => {\n      this.items.find(i => i.name === name).price = price;\n    };\n  }\n})), _class);","map":{"version":3,"sources":["/Users/liat/Documents/bootcamp_elevation/my_projects/agora/src/stores/Inventory.js"],"names":["observable","Item","action","Inventory","constructor","item","name","location","price","quantity","items","find","i","push","filter"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,SAASC,IAAT,EAAcC,MAAd,QAA4B,QAA5B;AAEA,WAAaC,SAAb,sBAAO,MAAMA,SAAN,CAAgB;AAEnB;AACA;AACAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;;AAAA;;AAAA;;AAAA;;AACd,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,YAAhB;AACH;;AAPkB,CAAvB,+EACKP,UADL;AAAA;AAAA;AAAA;AAAA;AAAA,WACwB,EADxB;AAAA;AAAA,2EAQKE,MARL;AAAA;AAAA;AAAA;AAAA;AAAA,WAQsB,CAACI,IAAD,EAAOE,KAAK,GAAG,CAAf,EAAkBC,QAAQ,GAAG,CAA7B,KAAmC;AACjD,UAAIJ,IAAI,GAAG,KAAKK,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACN,IAAF,KAAWA,IAAhC,CAAX;AACA;AACID,QAAAA,IAAI,GACAA,IAAI,CAACI,QAAL,EADA,GAEE,KAAKC,KAAL,CAAWG,IAAX,CAAgB,IAAIZ,IAAJ,CAASK,IAAT,EAAeE,KAAf,EAAsBC,QAAtB,CAAhB,CAFN;AAGH;AACJ,KAfL;AAAA;AAAA,2EAiBKP,MAjBL;AAAA;AAAA;AAAA;AAAA;AAAA,WAiBuBI,IAAD,IAAU;AACxB,UAAID,IAAI,GAAG,KAAKK,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACN,IAAF,KAAWA,IAAhC,CAAX;AACA;AACID,QAAAA,IAAI,CAACI,QAAL,GAAe,CAAf,GACIJ,IAAI,CAACI,QAAL,EADJ,GAEM,KAAKC,KAAL,GAAW,KAAKA,KAAL,CAAWI,MAAX,CAAkBF,CAAC,IAAEA,CAAC,CAACN,IAAF,IAAQA,IAA7B,CAFjB;AAGH;AACJ,KAxBL;AAAA;AAAA,+EA0BKJ,MA1BL;AAAA;AAAA;AAAA;AAAA;AAAA,WA0ByB,CAACI,IAAD,EAAME,KAAN,KAAc;AAC/B,WAAKE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACN,IAAF,KAAWA,IAAhC,EAAsCE,KAAtC,GAA4CA,KAA5C;AACH,KA5BL;AAAA;AAAA","sourcesContent":["import { observable } from 'mobx'\nimport { Item,action } from './Item';\n\nexport class Inventory {\n    @observable items = []\n    // @observable completed = false\n    // @observable location\n    constructor(item) {\n        this.name = name\n        this.location = \"Super Sell\"\n    }\n    @action addItem = (name, price = 0, quantity = 1) => {\n        let item = this.items.find(i => i.name === name)\n        {\n            item ?\n                item.quantity++\n                : this.items.push(new Item(name, price, quantity))\n        }\n    }\n\n    @action buyItem = (name) => {\n        let item = this.items.find(i => i.name === name)\n        {\n            item.quantity >1 ?\n                item.quantity--\n                : this.items=this.items.filter(i=>i.name!=name)\n        }\n    }\n\n    @action changePrice =(name,price)=>{\n        this.items.find(i => i.name === name).price=price\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}